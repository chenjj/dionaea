Description: Move cfg to conf && install it to /etc/dionaea
 dionaea-nisl (0.1.0.3-0.3) precise; urgency=low
 .
   * Moving cfg file
Author: Xiaoyu Liu (Vury Leo) <i@vuryleo.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- a/Makefile.in
+++ b/Makefile.in
@@ -325,7 +325,7 @@
 stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
 	@rm -f stamp-h1
 	cd $(top_builddir) && $(SHELL) ./config.status config.h
-$(srcdir)/config.h.in:  $(am__configure_deps) 
+$(srcdir)/config.h.in:  $(am__configure_deps)
 	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
 	rm -f stamp-h1
 	touch $@
@@ -803,6 +803,7 @@
 	$(mkinstalldirs) $(DESTDIR)$(localstatedir)/dionaea/bistreams/
 	$(mkinstalldirs) $(DESTDIR)$(localstatedir)/dionaea/wwwroot/
 	$(INSTALL_DATA) $(srcdir)/conf/dionaea.conf.dist $(DESTDIR)$(sysconfdir)/dionaea/dionaea.conf.dist;
+	$(INSTALL_DATA) $(srcdir)/conf/hpfeeds.cfg $(DESTDIR)$(sysconfdir)/dionaea/hpfeeds.cfg;
 	if [ ! -e $(DESTDIR)$(sysconfdir)/dionaea/dionaea.conf ]; then \
 		$(INSTALL_DATA) $(srcdir)/conf/dionaea.conf.dist $(DESTDIR)$(sysconfdir)/dionaea/dionaea.conf; \
 	fi
--- /dev/null
+++ b/conf/hpfeeds.cfg
@@ -0,0 +1,6 @@
+#Notice:there is no space around  = 
+HOST=hpfeeds.weilin.me
+PORT=10000
+IDENT=a8g1e@hp1
+SECRET=5c44vxrydyxladza
+CHANNEL=dionaea.bistream
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -55,7 +55,9 @@
 	dionaea-modules.$(OBJEXT) dionaea-pchild.$(OBJEXT) \
 	dionaea-log.$(OBJEXT) dionaea-signals.$(OBJEXT) \
 	dionaea-incident.$(OBJEXT) dionaea-threads.$(OBJEXT) \
-	dionaea-bistream.$(OBJEXT) dionaea-processor.$(OBJEXT)
+	dionaea-bistream.$(OBJEXT) dionaea-processor.$(OBJEXT) \
+	dionaea-publish.$(OBJEXT) dionaea-hpfeeds.$(OBJEXT) \
+	dionaea-sha1.$(OBJEXT)
 dionaea_OBJECTS = $(am_dionaea_OBJECTS)
 dionaea_LDADD = $(LDADD)
 dionaea_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
@@ -256,7 +258,7 @@
 	${LIB_SSL_LIBS} ${LIB_UDNS_LIBS} ${LIB_GC_LIBS} ${AM_LDFLAGS}
 dionaea_SOURCES = dionaea.c dns.c refcount.c node_info.c util.c \
 	connection.c modules.c pchild.c log.c signals.c incident.c \
-	threads.c bistream.c processor.c
+	threads.c bistream.c processor.c publish.c hpfeeds.c sha1.c
 all: all-am
 
 .SUFFIXES:
@@ -348,13 +350,16 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-connection.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-dionaea.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-dns.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-hpfeeds.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-incident.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-log.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-modules.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-node_info.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-pchild.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-processor.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-publish.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-refcount.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-sha1.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-signals.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-threads.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dionaea-util.Po@am__quote@
@@ -576,6 +581,48 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -c -o dionaea-processor.obj `if test -f 'processor.c'; then $(CYGPATH_W) 'processor.c'; else $(CYGPATH_W) '$(srcdir)/processor.c'; fi`
 
+dionaea-publish.o: publish.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -MT dionaea-publish.o -MD -MP -MF $(DEPDIR)/dionaea-publish.Tpo -c -o dionaea-publish.o `test -f 'publish.c' || echo '$(srcdir)/'`publish.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/dionaea-publish.Tpo $(DEPDIR)/dionaea-publish.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='publish.c' object='dionaea-publish.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -c -o dionaea-publish.o `test -f 'publish.c' || echo '$(srcdir)/'`publish.c
+
+dionaea-publish.obj: publish.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -MT dionaea-publish.obj -MD -MP -MF $(DEPDIR)/dionaea-publish.Tpo -c -o dionaea-publish.obj `if test -f 'publish.c'; then $(CYGPATH_W) 'publish.c'; else $(CYGPATH_W) '$(srcdir)/publish.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/dionaea-publish.Tpo $(DEPDIR)/dionaea-publish.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='publish.c' object='dionaea-publish.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -c -o dionaea-publish.obj `if test -f 'publish.c'; then $(CYGPATH_W) 'publish.c'; else $(CYGPATH_W) '$(srcdir)/publish.c'; fi`
+
+dionaea-hpfeeds.o: hpfeeds.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -MT dionaea-hpfeeds.o -MD -MP -MF $(DEPDIR)/dionaea-hpfeeds.Tpo -c -o dionaea-hpfeeds.o `test -f 'hpfeeds.c' || echo '$(srcdir)/'`hpfeeds.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/dionaea-hpfeeds.Tpo $(DEPDIR)/dionaea-hpfeeds.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='hpfeeds.c' object='dionaea-hpfeeds.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -c -o dionaea-hpfeeds.o `test -f 'hpfeeds.c' || echo '$(srcdir)/'`hpfeeds.c
+
+dionaea-hpfeeds.obj: hpfeeds.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -MT dionaea-hpfeeds.obj -MD -MP -MF $(DEPDIR)/dionaea-hpfeeds.Tpo -c -o dionaea-hpfeeds.obj `if test -f 'hpfeeds.c'; then $(CYGPATH_W) 'hpfeeds.c'; else $(CYGPATH_W) '$(srcdir)/hpfeeds.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/dionaea-hpfeeds.Tpo $(DEPDIR)/dionaea-hpfeeds.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='hpfeeds.c' object='dionaea-hpfeeds.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -c -o dionaea-hpfeeds.obj `if test -f 'hpfeeds.c'; then $(CYGPATH_W) 'hpfeeds.c'; else $(CYGPATH_W) '$(srcdir)/hpfeeds.c'; fi`
+
+dionaea-sha1.o: sha1.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -MT dionaea-sha1.o -MD -MP -MF $(DEPDIR)/dionaea-sha1.Tpo -c -o dionaea-sha1.o `test -f 'sha1.c' || echo '$(srcdir)/'`sha1.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/dionaea-sha1.Tpo $(DEPDIR)/dionaea-sha1.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sha1.c' object='dionaea-sha1.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -c -o dionaea-sha1.o `test -f 'sha1.c' || echo '$(srcdir)/'`sha1.c
+
+dionaea-sha1.obj: sha1.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -MT dionaea-sha1.obj -MD -MP -MF $(DEPDIR)/dionaea-sha1.Tpo -c -o dionaea-sha1.obj `if test -f 'sha1.c'; then $(CYGPATH_W) 'sha1.c'; else $(CYGPATH_W) '$(srcdir)/sha1.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/dionaea-sha1.Tpo $(DEPDIR)/dionaea-sha1.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sha1.c' object='dionaea-sha1.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dionaea_CFLAGS) $(CFLAGS) -c -o dionaea-sha1.obj `if test -f 'sha1.c'; then $(CYGPATH_W) 'sha1.c'; else $(CYGPATH_W) '$(srcdir)/sha1.c'; fi`
+
 mostlyclean-libtool:
 	-rm -f *.lo
 
--- /dev/null
+++ b/include/hpfeeds.h
@@ -0,0 +1,58 @@
+/*
+  hpfeeds.h
+  Copyright (C) 2011 The Honeynet Project
+  Copyright (C) 2011 Tillmann Werner, tillmann.werner@gmx.de
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License version 2 as 
+  published by the Free Software Foundation.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef __hpfeeds_h
+#define __hpfeeds_h
+
+#include <sys/types.h>
+
+#define	OP_ERROR 0
+#define	OP_INFO	1
+#define	OP_AUTH	2
+#define	OP_PUBLISH 3
+#define	OP_SUBSCRIBE 4
+
+typedef struct {
+	struct {
+		u_int32_t msglen;
+		u_int8_t opcode;
+	}  __attribute__((__packed__)) hdr;
+	u_char data[];
+} hpf_msg_t;
+
+typedef struct {
+	u_char len;
+	u_char data[];
+} hpf_chunk_t;
+
+
+void hpf_msg_delete(hpf_msg_t *m);
+
+hpf_msg_t *hpf_msg_getmsg(u_char *data);
+u_int32_t hpf_msg_getsize(hpf_msg_t *m);
+u_int32_t hpf_msg_gettype(hpf_msg_t *m);
+
+hpf_chunk_t *hpf_msg_get_chunk(u_char *data, size_t len);
+
+hpf_msg_t *hpf_msg_error(u_char *err, size_t err_size);
+hpf_msg_t *hpf_msg_info(u_int32_t nonce, u_char *fbname, size_t fbname_len);
+hpf_msg_t *hpf_msg_auth(u_int32_t nonce, u_char *ident, size_t ident_len, u_char *secret, size_t secret_len);
+hpf_msg_t *hpf_msg_publish(u_char *ident, size_t ident_len, u_char *channel, size_t channel_len, u_char *data, size_t data_len);
+hpf_msg_t *hpf_msg_subscribe(u_char *ident, size_t ident_len, u_char *channel, size_t channel_len);
+
+#endif
--- /dev/null
+++ b/include/publish.h
@@ -0,0 +1,38 @@
+#ifndef __publish_h
+#define __publish_h
+
+#include <arpa/inet.h>
+#include <getopt.h>
+#include "hpfeeds.h"
+#include <netdb.h>
+#include <signal.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+#include <sys/socket.h>
+#include <netinet/in.h>
+#include <ctype.h>
+#define MAXLEN 32768
+
+typedef enum {
+S_INIT,
+S_AUTH,
+S_SUBSCRIBE,
+S_PUBLISH,
+S_RECVMSGS,
+S_ERROR,
+S_TERMINATE
+} session_state_t;
+
+
+typedef enum {
+C_SUBSCRIBE,
+C_PUBLISH,
+C_UNKNOWN } cmd_t;
+
+void* publish(void *buf);
+u_char *read_msg(int s);
+void readConfig(char *conf_path,char *conf_name,char *config_buff);
+char *url_encode(char *str);
+#endif
--- /dev/null
+++ b/include/sha1.h
@@ -0,0 +1,74 @@
+/*
+ *  sha1.h
+ *
+ *  Description:
+ *      This is the header file for code which implements the Secure
+ *      Hashing Algorithm 1 as defined in FIPS PUB 180-1 published
+ *      April 17, 1995.
+ *
+ *      Many of the variable names in this code, especially the
+ *      single character names, were used because those were the names
+ *      used in the publication.
+ *
+ *      Please read the file sha1.c for more information.
+ *
+ */
+
+#ifndef _SHA1_H_
+#define _SHA1_H_
+
+#include <stdint.h>
+/*
+ * If you do not have the ISO standard stdint.h header file, then you
+ * must typdef the following:
+ *    name              meaning
+ *  uint32_t         unsigned 32 bit integer
+ *  uint8_t          unsigned 8 bit integer (i.e., unsigned char)
+ *  int_least16_t    integer of >= 16 bits
+ *
+ */
+
+#ifndef _SHA_enum_
+#define _SHA_enum_
+enum
+{
+    shaSuccess = 0,
+    shaNull,            /* Null pointer parameter */
+    shaInputTooLong,    /* input data too long */
+    shaStateError       /* called Input after Result */
+};
+#endif
+#define SHA1HashSize 20
+
+/*
+ *  This structure will hold context information for the SHA-1
+ *  hashing operation
+ */
+typedef struct SHA1Context
+{
+    uint32_t Intermediate_Hash[SHA1HashSize/4]; /* Message Digest  */
+
+    uint32_t Length_Low;            /* Message length in bits      */
+    uint32_t Length_High;           /* Message length in bits      */
+
+                               /* Index into message block array   */
+    int_least16_t Message_Block_Index;
+    uint8_t Message_Block[64];      /* 512-bit message blocks      */
+
+    int Computed;               /* Is the digest computed?         */
+    int Corrupted;             /* Is the message digest corrupted? */
+} SHA1Context;
+
+/*
+ *  Function Prototypes
+ */
+
+int SHA1Reset(  SHA1Context *);
+int SHA1Input(  SHA1Context *,
+                const uint8_t *,
+                unsigned int);
+int SHA1Result( SHA1Context *,
+                uint8_t Message_Digest[SHA1HashSize]);
+
+#endif
+
